import org.apache.tools.ant.filters.ReplaceTokens

plugins {
//  id "scala"
  id "java"
  id "com.github.hierynomus.license" version "0.16.1"
  id "com.xebialabs.xldp" version "1.0.5"
  id 'nebula.release' version '11.0.0'
  id "com.xebialabs.xl.docker" version "1.1.0"
}

// For Java 17
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// apply plugin: 'eclipse'
// apply plugin: 'idea'
// apply plugin: 'maven'

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url 'https://dist.xebialabs.com/public/maven2'
  }
}

def apiVersion = "24.1.0"

dependencies {
//  implementation "org.scala-lang:scala-library:2.13.12"
  implementation "com.xebialabs.deployit:udm-plugin-api:$apiVersion"
  implementation "org.slf4j:slf4j-api:2.0.12"
  implementation files('/path/to/local/file1.jar',
                '/path/to/local/file2.jar',
                '/path/to/local/file3.jar')
}

// version = "1.0.0"

// sourceCompatibility = 1.7
// targetCompatibility = 1.7

xlDocker {
  compileImage = 'xebialabs/xlr_dev_compile'
  compileVersion = 'v24.1.2.1'
  runImage = 'xebialabs/xlr_dev_run'
  runVersion = 'v24.1.2.1'
  runPortMapping = '15516:5516'
}

if (!project.hasProperty('release.scope')) {
  project.ext['release.scope'] = 'patch'
}

if (!project.hasProperty('release.useLastTag')) {
  project.ext['release.useLastTag'] = true
}

processResources.configure {
  filesNotMatching('**/*.png') {
    filter ReplaceTokens, tokens: [
      'project.version': version.toString(),
      'project.name'   : rootProject.name
    ]
  }
}

license {
  header rootProject.file('License.md')
  strictCheck true
  ext.year = Calendar.getInstance().get(Calendar.YEAR)
  ext.name = 'XEBIALABS'
}
